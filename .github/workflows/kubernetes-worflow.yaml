name: Solar System Workflow kube


on:
  workflow_dispatch:
#   push:
#     branches:
#       - main
#       - 'feature/*'


env:
  MONGO_URI: 'github-actions-iti-2025.global.mongocluster.cosmos.azure.com'
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}


jobs:
#   unit-testing: … 
#   code-coverage: … 
#   docker: 
  docker-build:
    name: docker build
    runs-on: ubuntu-latest
    steps:
    # - name: Docker Hub Login
    #   uses: docker/login-action@v2.2.0
    #   with:
    #   username: ${{ vars.DOCKERHUB_USERNAME }}
    #   password: ${{ secrets.DOCKERHUB_PASSWORD }}
    # - name: Build Docker Image for Testing
    #   uses: docker/build-push-action@v4
    #   with:
    #   context: .
    #   push: true
    #   tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Build
        run: |
          docker build -t githubactionsiti2025.azurecr.io/${{ secrets.DOCKER_USERNAME }}/ga-application:${{ github.sha }} .
      - name: Docker Login to ACR
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login githubactionsiti2025.azurecr.io -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker Push to ACR
        run: |
          docker push githubactionsiti2025.azurecr.io/${{ secrets.DOCKER_USERNAME }}/ga-application:${{ github.sha }}

  dev-deploy:
    name: Deploy to Dev Env
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install kubectl CLI
      uses: azure/setup-kubectl@v3
      # with:
      #       version: '1.25.0'

    # - name: Set Kubeconfig Context
    #   uses: azure/k8s-set-context@v3
    #   with:
    #   method: kubeconfig
    #   kubeconfig: ${{ secrets.KUBECONFIG }}

    # - name: Fetch Kubernetes Cluster Details
    #   run: |
    #         kubectl version --short
    #         echo "-----------------------------------------"
    #         kubectl get nodes

    # - name: Replace tokens in manifests
    #   uses: cschlieden/replace-tokens@v1
    #   with:
    #         tokenPrefix: '_{_'
    #         tokenSuffix: '_}_'
    #         files:
    #         - kubernetes/development/*.yaml
    #   env:
    #         NAMESPACE: abdelazizibrahim
    #         REPLICAS: ${{ vars.REPLICAS }}
    #         IMAGE: githubactionsiti2025.azurecr.io/${{ secrets.DOCKER_USERNAME }}/ga-application:${{ github.sha }}

    - name: Set Kubeconfig Context
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBECONFIG }}

    - name: Fetch Kubernetes Cluster Details
      run: |
        ## kubectl version --short
        kubectl version
        echo "-----------------------------------------"
        kubectl get nodes

    - name: Replace tokens in manifests
      uses: cschleiden/replace-tokens@v1

      with:
        tokenPrefix: '_{_'
        tokenSuffix: '_}_'
        files: kubernetes/development/*.yaml
      env:
        NAMESPACE: abdelazizibrahim
        REPLICAS: ${{ vars.REPLICAS }}
        IMAGE: githubactionsiti2025.azurecr.io/${{ secrets.DOCKER_USERNAME }}/ga-application:${{ github.sha }}


    - name: Show processed manifests
      run: cat kubernetes/development/*.yaml

    - name: Ensure Namespace Exists
      run: |
            kubectl get namespace abdelazizibrahim || \
            kubectl create namespace abdelazizibrahim
    - name: Create MongoDB secret
      run: |
            kubectl -n abdelazizibrahim create secret generic mongo-db-creds \
            --from-literal=MONGO_URI=${{ env.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --save-config \
            --dry-run=client \
            -o yaml | kubectl apply -f -


    - name: Deploy manifests
      run: kubectl apply -f kubernetes/development